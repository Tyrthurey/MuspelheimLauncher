# yaml-language-server: $schema=https://raw.githubusercontent.com/flatpak/flatpak-builder/main/data/flatpak-manifest.schema.json
# Flatpak manifest for Create Academy Launcher
# Copied in large part from:
# - https://github.com/PrismLauncher/PrismLauncher/blob/develop/flatpak/org.prismlauncher.PrismLauncher.yml

app-id: 'net.muspelheim.launcher'
runtime: org.freedesktop.Platform
runtime-version: '23.08'
sdk: org.freedesktop.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.openjdk17
  - org.freedesktop.Sdk.Extension.node18

base: org.electronjs.Electron2.BaseApp
base-version: '23.08'

build-options:
  append-path: /usr/lib/sdk/node18/bin
  env:
    NPM_CONFIG_LOGLEVEL: info

command: run.sh

finish-args:
  - --share=ipc
  - --socket=x11
  - --socket=wayland
  - --device=all
  - --share=network
  - --socket=pulseaudio
  - --env=ELECTRON_TRASH=gio
    # launcher and game files
  - --filesystem=~/.muspelheimlauncher:create
  - --filesystem=xdg-config/Create\ Academy\ Launcher:create
    # for Discord RPC mods
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
    # Mod drag&drop
  - --filesystem=xdg-download:ro

cleanup:
  - /lib/libGLU*

modules:
  # Might be needed by some Controller mods (see https://github.com/isXander/Controlify/issues/31)
  - shared-modules/libusb/libusb.json

  # Needed for proper Wayland support
  - libdecor.json

  - name: openjdk
    buildsystem: simple
    build-commands:
      - mkdir -p /app/jdk/
      - /usr/lib/sdk/openjdk17/install.sh
      - mv /app/jre /app/jdk/17
    cleanup:
      - /jre

  - name: ecm
    buildsystem: cmake-ninja
    sources:
      - type: git
        url: https://github.com/KDE/extra-cmake-modules.git
        tag: v6.5.0
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig

  - name: glfw
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - -DBUILD_SHARED_LIBS:BOOL=ON
      - -DGLFW_USE_WAYLAND:BOOL=ON
      - -DGLFW_BUILD_DOCS:BOOL=OFF
    sources:
      - type: archive
        url: https://github.com/glfw/glfw/archive/3.3.8.tar.gz
        sha512: 70d6d99fb7e7616990516070c9a430915dc68d89ec4fe785570f0b35f5c9606a34121e0cd57c0a7debb50e87e2a8e8d97d81a6d52d65ef454f7fd191bd9f679f
      - type: patch
        path: patches/minecraft-wayland/0003-Don-t-crash-on-calls-to-focus-or-icon.patch
      - type: patch
        path: patches/minecraft-wayland/0004-wayland-fix-broken-opengl-screenshots-on-mutter.patch
      - type: patch
        path: patches/minecraft-wayland/0005-Add-warning-about-being-an-unofficial-patch.patch
    #   - type: patch
    #     path: patches/minecraft-wayland/0007-Platform-Prefer-Wayland-over-X11.patch
    cleanup:
      - /include
      - /lib/cmake
      - /lib/pkgconfig

  - name: xrandr
    buildsystem: autotools
    sources:
      - type: archive
        url: https://xorg.freedesktop.org/archive/individual/app/xrandr-1.5.2.tar.xz
        sha256: c8bee4790d9058bacc4b6246456c58021db58a87ddda1a9d0139bf5f18f1f240
        x-checker-data:
          type: anitya
          project-id: 14957
          stable-only: true
          url-template: https://xorg.freedesktop.org/archive/individual/app/xrandr-$version.tar.xz
    cleanup:
      - /share/man
      - /bin/xkeystone

  - name: gamemode
    buildsystem: meson
    config-opts:
      - -Dwith-sd-bus-provider=no-daemon
      - -Dwith-examples=false
    post-install:
      # gamemoderun is installed for users who want to use wrapper commands
      # post-install is running inside the build dir, we need it from the source though
      - install -Dm755 ../data/gamemoderun -t /app/bin
    sources:
      - type: archive
        dest-filename: gamemode.tar.gz
        url: https://api.github.com/repos/FeralInteractive/gamemode/tarball/1.8.1
        sha256: 969cf85b5ca3944f3e315cd73a0ee9bea4f9c968cd7d485e9f4745bc1e679c4e
        x-checker-data:
          type: json
          url: https://api.github.com/repos/FeralInteractive/gamemode/releases/latest
          version-query: .tag_name
          url-query: .tarball_url
          timestamp-query: .published_at
    cleanup:
      - /include
      - /lib/pkgconfig
      - /lib/libgamemodeauto.a

  - name: glxinfo
    buildsystem: meson
    config-opts:
      - --bindir=/app/mesa-demos
      - -Degl=disabled
      - -Dglut=disabled
      - -Dosmesa=disabled
      - -Dvulkan=disabled
      - -Dwayland=disabled
    post-install:
      - mv -v /app/mesa-demos/glxinfo /app/bin
    sources:
      - type: archive
        url: https://archive.mesa3d.org/demos/mesa-demos-9.0.0.tar.xz
        sha256: 3046a3d26a7b051af7ebdd257a5f23bfeb160cad6ed952329cdff1e9f1ed496b
        x-checker-data:
          type: anitya
          project-id: 16781
          stable-only: true
          url-template: https://archive.mesa3d.org/demos/mesa-demos-$version.tar.xz
    cleanup:
      - /include
      - /mesa-demos
      - /share
    modules:
      - shared-modules/glu/glu-9.json

  - name: create-academy-launcher
    buildsystem: simple
    build-options:
      env:
        XDG_CACHE_HOME: /run/build/create-academy-launcher/flatpak-node/cache
        npm_config_cache: /run/build/create-academy-launcher/flatpak-node/npm-cache
        npm_config_offline: 'true'
    build-commands:
      # Install npm dependencies
      - npm install --offline
      # Build the app; in this example the `dist` script
      # in package.json runs electron-builder
      - |
        . ../flatpak-node/electron-builder-arch-args.sh
        npm run dist -- $ELECTRON_BUILDER_ARCH_ARGS  --linux --dir
      # Bundle app and dependencies
      - cp -a dist/linux*unpacked /app/main
      # Install app wrapper
      - install -Dm755 -t /app/bin/ ../run.sh
    subdir: main
    sources:
      #- type: archive
      #  url: https://github.com/flathub/electron-sample-app/archive/1.0.1.tar.gz
      #  sha256: a2feb3f1cf002a2e4e8900f718cc5c54db4ad174e48bfcfbddcd588c7b716d5b
      - type: dir
        path: ../
        dest: main
      - generated-sources.json
      # Wrapper to launch the app
      - type: script
        dest-filename: run.sh
        commands:
          - zypak-wrapper.sh /app/main/create-academy-launcher "$@"
